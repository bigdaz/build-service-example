/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}


/*
 * Build Service setup
 */

def slowServer = project.gradle.sharedServices.registerIfAbsent("slow", SlowServer) {
    parameters.port = 8888
}

test {
    doFirst {
        // Before the tests run, access the service to ensure it has started.
        slowServer.get()
    }
}

abstract class SlowServer implements BuildService<Params>, AutoCloseable {
    interface Params extends BuildServiceParameters {
        Property<Integer> getPort()
    }

    SlowServer() {
        // Start the server ...
        System.out.println("Server is starting on port: " + parameters.port.get())
        Thread.sleep(3000)
        System.out.println("Server is running.")
    }

    @Override
    void close() {
        // Stop the server ...
        System.out.println("Server is stopped.")
    }
}
